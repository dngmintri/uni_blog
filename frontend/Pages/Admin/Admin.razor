@page "/admin"
@using frontend.Services
@using frontend.Components
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Authorization
@using Blazorise
@using Blazorise.Icons.FontAwesome
@inject IAuthService authService
@inject NavigationManager navigationManager
@inject PageTitleService pageTitleService

<PageTitle>Trang qu·∫£n tr·ªã</PageTitle>

@if (currentUser?.Role != "Admin")
{
    <div class="container mt-5">
        <div class="row justify-content-center">
            <div class="col-md-6">
                <div class="alert alert-danger text-center">
                    <div class="mb-3">
                        <i class="fas fa-shield-alt fa-3x text-danger"></i>
                    </div>
                    <h4 class="alert-heading">üîí Access Denied</h4>
                    <p class="mb-3">You need admin privileges to access this page.</p>
                    <hr>
                    <div class="d-flex justify-content-center gap-2">
                        <Button Color="Color.Primary" @onclick="GoHome">
                            <Blazorise.Icons.FontAwesome.Icon Name="IconName.Home" class="me-1" />
                            üè† Go Home
                        </Button>
                        <Button Color="Color.Secondary" @onclick="GoToLogin">
                            <Blazorise.Icons.FontAwesome.Icon Name="IconName.User" class="me-1" />
                            üîë Login
                        </Button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <div class="admin-container">
        <!-- Header -->
        <div class="admin-header">
            <div class="d-flex justify-content-between align-items-center">
                <h1 class="admin-title">
                    <Blazorise.Icons.FontAwesome.Icon Name="IconName.User" class="me-2" />
                    Trang qu·∫£n tr·ªã
                </h1>
                <div class="admin-actions">
                    <Button Color="Color.Secondary" @onclick="GoBack" class="me-2">
                        <Blazorise.Icons.FontAwesome.Icon Name="IconName.ArrowLeft" class="me-1" />
                        Quay l·∫°i
                    </Button>
                    <Button Color="Color.Danger" @onclick="Logout">
                        <Blazorise.Icons.FontAwesome.Icon Name="IconName.Times" class="me-1" />
                        ƒêƒÉng xu·∫•t
                    </Button>
                </div>
            </div>
        </div>

        <!-- Navigation Tabs -->
        <div class="admin-nav">
            <div class="nav-tabs">
                <Button Color="@(activeTab == "users" ? Color.Primary : Color.Light)" 
                        @onclick="@(() => SetActiveTab("users"))" 
                        class="me-2">
                    <Blazorise.Icons.FontAwesome.Icon Name="IconName.Users" class="me-1" />
                    Qu·∫£n l√Ω ng∆∞·ªùi d√πng
                </Button>
                <Button Color="@(activeTab == "posts" ? Color.Primary : Color.Light)" 
                        @onclick="@(() => SetActiveTab("posts"))">
                    <Blazorise.Icons.FontAwesome.Icon Name="IconName.FileAlt" class="me-1" />
                    Qu·∫£n l√Ω b√†i vi·∫øt
                </Button>
            </div>
            
            <div class="tab-content">
                @if (activeTab == "users")
                {
                    <UserManagement />
                }
                else if (activeTab == "posts")
                {
                    <PostManagement />
                }
            </div>
        </div>
    </div>
}

<style>
    .admin-container {
        min-height: 100vh;
        background-color: #f8f9fa;
        padding: 2rem;
    }

    .admin-header {
        background: white;
        border-radius: 8px;
        padding: 1.5rem;
        margin-bottom: 2rem;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

    .admin-title {
        color: #2c3e50;
        margin: 0;
        font-size: 1.8rem;
        font-weight: 600;
    }

    .admin-actions {
        display: flex;
        gap: 0.5rem;
    }

    .admin-nav {
        background: white;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        overflow: hidden;
    }

    .nav-tabs {
        padding: 1rem 1.5rem;
        border-bottom: 1px solid #dee2e6;
        background-color: #f8f9fa;
    }

    .tab-content {
        padding: 2rem;
        min-height: 500px;
    }
</style>

@code {
    private string activeTab = "users";
    private AuthResponse? currentUser;

    protected override async Task OnInitializedAsync()
    {
        // Load current user info
        currentUser = await authService.GetCurrentUserAsync();
        
        // Set page title
        pageTitleService.Title = "Trang qu·∫£n tr·ªã";
    }

    private void SetActiveTab(string tab)
    {
        activeTab = tab;
        StateHasChanged();
    }

    private void GoBack()
    {
        navigationManager.NavigateTo("/");
    }

    private void GoHome()
    {
        navigationManager.NavigateTo("/");
    }

    private void GoToLogin()
    {
        navigationManager.NavigateTo("/login");
    }

    private async Task Logout()
    {
        await authService.LogoutAsync();
        navigationManager.NavigateTo("/login");
    }
}
