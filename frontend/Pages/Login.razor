@page "/login"
@using Blazorise
@using Blazorise.Icons.FontAwesome
@using frontend.Models
@using frontend.Services
@inject IAuthService authService
@inject NavigationManager navigationManager

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-12 col-lg-12">
            <div class="card shadow">
                <div class="card-header bg-primary text-white text-center">
                    <h4><Blazorise.Icons.FontAwesome.Icon Name="IconName.User" /> Đăng nhập</h4>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <label class="form-label">Tên đăng nhập hoặc Email *</label>
                        <TextEdit @bind-Text="loginRequest.Username" Placeholder="Nhập tên đăng nhập hoặc email" Class="form-control" />
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Mật khẩu *</label>
                        <input type="password" @bind="loginRequest.Password" placeholder="Nhập mật khẩu" class="form-control" />
                    </div>

                    @if (!string.IsNullOrEmpty(errorMessage))
                    {
                        <Alert Color="Color.Danger" Visible="true" class="mt-3">
                            @errorMessage
                        </Alert>
                    }

                    <div class="d-grid gap-2 mt-4">
                        <Button Color="Color.Primary" Clicked="HandleLogin" Disabled="isLoading">
                            @if (isLoading)
                            {
                                <span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>
                            }
                            Đăng nhập
                        </Button>
                        <Button Color="Color.Secondary" Clicked="GoToRegister">
                            Chưa có tài khoản? Đăng ký
                        </Button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private LoginRequest loginRequest = new();
    private string errorMessage = string.Empty;
    private bool isLoading = false;

    private async Task HandleLogin()
    {
        errorMessage = string.Empty;

        // Validate required fields
        if (string.IsNullOrWhiteSpace(loginRequest.Username) ||
            string.IsNullOrWhiteSpace(loginRequest.Password))
        {
            errorMessage = "Vui lòng điền đầy đủ thông tin!";
            return;
        }

        isLoading = true;

        try
        {
            var result = await authService.LoginAsync(loginRequest);
            
            if (result != null)
            {
                navigationManager.NavigateTo("/dashboard");
            }
            else
            {
                errorMessage = "Đăng nhập thất bại!";
            }
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
        finally
        {
            isLoading = false;
        }
    }

    private void GoToRegister()
    {
        navigationManager.NavigateTo("/register");
    }
}